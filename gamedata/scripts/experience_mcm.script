-- Experience Framework
-- MCM Settings

function on_mcm_load()
	local op = {
		id = "experience_framework", gr = {
			{
				id = "experience_framework_main", sh = true, gr = {
		
					{id = "title", type = "slide", link = "ui_main_experience_mod_options_slider", text = "ui_mcm_experience_framework_main_title", size = {512,50}, spacing = 20},
					{id = "divider", type = "line"},
					
					{id = "DISPLAY_UI", type = "key_bind", val = 2, def = DIK_keys.DIK_J},
					{id = "KEY_MODIFIER", type = ui_mcm.kb_mod_radio, val = 2, def = 0, hint = "experience_framework_main_mcm_kb_modifier", content = {{0, "experience_framework_main_mcm_kb_mod_none"}, {1, "experience_framework_main_mcm_kb_mod_shift"}, {2, "experience_framework_main_mcm_kb_mod_ctrl"}, {3, "experience_framework_main_mcm_kb_mod_alt"}}},
					{id = "KEY_MODE", type = ui_mcm.kb_mod_radio, val = 2, def = 0, hint = "experience_framework_main_mcm_kb_mode", content= {{0, "experience_framework_main_mcm_kb_mode_press"}, {1, "experience_framework_main_mcm_kb_mode_dtap"}}},
					{id = "divider", type = "line"},
					
					{id = "LEVEL_UP_NEWS", type = "check", val = 1, def = true},
					{id = "XP_GAIN_NEWS", type = "check", val = 1, def = true},
					{id = "NEWS_SOUND", type = "check", val = 1, def = true},
					{id = "divider", type = "line"},
					
					{id = "GLOBAL_EXPERIENCE_MULT", type = "track", val = 2, min = 0.01, max = 5, step = 0.01, def = 1.0},
					{id = "divider", type = "line"},
					
					{id = "DEBUG_MODE", type = "check", val = 1, def = false},
					{id = "divider", type = "line"},
				}
			},
			
			{
				id = "experience_framework_xp_option", sh = true, gr = {
					{id = "title", type = "slide", link = "ui_main_experience_mod_options_slider", text = "ui_mcm_experience_framework_xp_option_title", size = {512,50}, spacing = 20},
					{id = "divider", type = "line"},
					
					{id = "stalker_xp_option", type = "desc", text = "ui_mcm_experience_framework_xp_option_stalker_xp_option", clr = {255,153,255,255}},
					{id = "stalker",	type = "input", val = 2, min = 1, max = 1000, def = 22},
					{id = "bandit",		type = "input", val = 2, min = 1, max = 1000, def = 20},
					{id = "csky",		type = "input", val = 2, min = 1, max = 1000, def = 22},
					{id = "army",		type = "input", val = 2, min = 1, max = 1000, def = 28},
					{id = "freedom",	type = "input", val = 2, min = 1, max = 1000, def = 26},
					{id = "dolg",		type = "input", val = 2, min = 1, max = 1000, def = 27},
					{id = "ecolog",		type = "input", val = 2, min = 1, max = 1000, def = 18},
					{id = "killer",		type = "input", val = 2, min = 1, max = 1000, def = 31},
					{id = "monolith",	type = "input", val = 2, min = 1, max = 1000, def = 33},
					{id = "greh",		type = "input", val = 2, min = 1, max = 1000, def = 33},
					{id = "renegade",	type = "input", val = 2, min = 1, max = 1000, def = 20},
					{id = "isg",		type = "input", val = 2, min = 1, max = 1000, def = 40},
					{id = "zombied",	type = "input", val = 2, min = 1, max = 1000, def = 16},
					{id = "divider", type = "line"},
					
					{id = "stalker_xp_rank_option", type = "desc", text = "ui_mcm_experience_framework_xp_option_stalker_xp_rank_option", clr = {255,153,255,255}},
					{id = "novice",			type = "track", val = 2, min = 0.01, max = 10, step = 0.01, def = 1.0},
					{id = "trainee",		type = "track", val = 2, min = 0.01, max = 10, step = 0.01, def = 1.0},
					{id = "experienced",	type = "track", val = 2, min = 0.01, max = 10, step = 0.01, def = 2.0},
					{id = "professional", 	type = "track", val = 2, min = 0.01, max = 10, step = 0.01, def = 4.0},
					{id = "veteran",		type = "track", val = 2, min = 0.01, max = 10, step = 0.01, def = 6.0},
					{id = "expert",			type = "track", val = 2, min = 0.01, max = 10, step = 0.01, def = 7.0},
					{id = "master",			type = "track", val = 2, min = 0.01, max = 10, step = 0.01, def = 8.0},
					{id = "legend",			type = "track", val = 2, min = 0.01, max = 10, step = 0.01, def = 8.0},
					{id = "divider", type = "line"},
					
					{id = "mutant_xp_option", type = "desc", text = "ui_mcm_experience_framework_xp_option_mutant_xp_option", clr = {255,153,255,255}},
					{id = "bloodsucker",	type = "input", val = 2, min = 1, max = 1000, def = 40},
					{id = "boar",			type = "input", val = 2, min = 1, max = 1000, def = 25},
					{id = "burer",			type = "input", val = 2, min = 1, max = 1000, def = 70},
					{id = "chimera",		type = "input", val = 2, min = 1, max = 1000, def = 150},
					{id = "controller",		type = "input", val = 2, min = 1, max = 1000, def = 80},
					{id = "dog",			type = "input", val = 2, min = 1, max = 1000, def = 15},
					{id = "flesh",			type = "input", val = 2, min = 1, max = 1000, def = 10},
					{id = "gigant",			type = "input", val = 2, min = 1, max = 1000, def = 150},
					{id = "poltergeist",	type = "input", val = 2, min = 1, max = 1000, def = 65},
					{id = "psy_dog",		type = "input", val = 2, min = 1, max = 1000, def = 50},
					{id = "pseudodog",		type = "input", val = 2, min = 1, max = 1000, def = 30},
					{id = "snork",			type = "input", val = 2, min = 1, max = 1000, def = 45},
					{id = "tushkano",		type = "input", val = 2, min = 1, max = 1000, def = 1},
					{id = "cat",			type = "input", val = 2, min = 1, max = 1000, def = 20},
					{id = "fracture",		type = "input", val = 2, min = 1, max = 1000, def = 20},
					{id = "zombie",			type = "input", val = 2, min = 1, max = 1000, def = 10},
					{id = "karlik",			type = "input", val = 2, min = 1, max = 1000, def = 65},
					{id = "psysucker",		type = "input", val = 2, min = 1, max = 1000, def = 70},
					{id = "lurker",			type = "input", val = 2, min = 1, max = 1000, def = 40},
					{id = "divider", type = "line"},
					
					{id = "TREASURE_XP", type = "input", val = 2, min = 1, max = 1000, def = 25},
					{id = "divider", type = "line"},
					
					{id = "TASK_XP", type = "input", val = 2, min = 1, max = 1000, def = 150},
					{id = "TASK_XP_MULT", type = "track", val = 2, min = 0.01, max = 5, step = 0.01, def = 2.00},
					{id = "divider", type = "line"},
					
					{id = "DISCOVER_SPOT_XP", type = "input", val = 2, min = 1, max = 1000, def = 10},
					{id = "divider", type = "line"},
					
					{id = "DISASSEMBLY_WPN_XP", type = "input", val = 2, min = 1, max = 1000, def = 1},
					{id = "DISASSEMBLY_OUT_XP", type = "input", val = 2, min = 1, max = 1000, def = 1},
					{id = "DISASSEMBLY_ITM_XP", type = "input", val = 2, min = 1, max = 1000, def = 1},
					{id = "divider", type = "line"},
					
					{id = "MUTANT_LOOT_XP", type = "input", val = 2, min = 1, max = 1000, def = 1},
					{id = "divider", type = "line"},
					
					{id = "REPAIR_ITM_XP", type = "input", val = 2, min = 1, max = 1000, def = 5},
					{id = "divider", type = "line"},
					
					{id = "COOKING_XP", type = "input", val = 2, min = 1, max = 1000, def = 5},
					{id = "divider", type = "line"},
					
					{id = "WORKSHOP_CRAFT_XP",		type = "input", val = 2, min = 1, max = 1000, def = 5},
					{id = "WORKSHOP_REPAIR_XP",		type = "input", val = 2, min = 1, max = 1000, def = 5},
					{id = "WORKSHOP_UPGRADE_XP",	type = "input", val = 2, min = 1, max = 1000, def = 5},
					{id = "divider", type = "line"},
				}
			}
		}
	}
	
	return op
end

local keybind = experience_core.MCM_SETTINGS.DISPLAY_UI
local modifier = experience_core.MCM_SETTINGS.KEY_MODIFIER
local mode = experience_core.MCM_SETTINGS.KEY_MODE
local get_experience_ui = experience_ui.get_experience_ui

local function on_option_change()
	if (ui_mcm) then
		keybind = ui_mcm.get("experience_framework/experience_framework_main/DISPLAY_UI") or keybind
		modifier = ui_mcm.get("experience_framework/experience_framework_main/KEY_MODIFIER")
		mode = ui_mcm.get("experience_framework/experience_framework_main/KEY_MODE")
	end
end

local function on_key_press(key)
	if (key == keybind) then
		if (not ui_mcm) then
			get_experience_ui()
			return
		end
		
		if (mode == 0) and ui_mcm.get_mod_key(modifier) then
			ui_mcm.simple_press("experience_framework", key, get_experience_ui)
			return
		end
		
		if (mode == 1) and  ui_mcm.get_mod_key(modifier) and ui_mcm.double_tap("experience_framework", key) then
			get_experience_ui()
			return
		end
	end
end

function on_game_start()
	RegisterScriptCallback("on_option_change",on_option_change)
    RegisterScriptCallback("on_key_press",on_key_press)
	on_option_change()
end