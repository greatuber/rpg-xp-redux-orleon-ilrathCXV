local vampirism = experience_core.perks_save_data["perk_vampirism"]["curr_level"]
local warmonger = experience_core.perks_save_data["perk_warmonger"]["curr_level"]
local headhunter = experience_core.perks_save_data["perk_headhunter"]["curr_level"]
local bloody_mess = experience_core.perks_save_data["perk_bloody_mess"]["curr_level"]

local criticalHit = false

--------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------

function kaboom(npc, dice)
	if not dice then return end
    local boom = "mine_new_blow"
    local npc_id = npc:id()
    local npc_position = npc:position()
    local npc_level_vertex_id = npc:level_vertex_id()
    local npc_game_vertex_id = npc:game_vertex_id()
    if dice then 
        function explode(explode_id)
            local explode_obj = get_object_by_id(explode_id)
            if explode_obj then
                local sim = alife()
                sim:release(sim:object(npc_id))
                explode_obj:explode(0)
                return true
            end
            return false
        end
        printf("Dice is %s, let's boom", dice)
        local explode_obj = alife_create_item(boom, {npc_position, npc_level_vertex_id, npc_game_vertex_id, nil})
        CreateTimeEvent(explode_obj.id, explode_obj.id, 0, explode, explode_obj.id)
    else
        printf("No luck this time, dice is %s", dice)
    end
end

--------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------

function perk_kill_effects(victim, killer)
    if not killer then return end
    if killer:id() ~= db.actor:id() then return end

-------------------------------------------------------------------------> Bloody Mess (SMG)/Bloodbath (Special)
	if bloody_mess >= 1 and (weapon_class ~= "melee") then
		local dice = math.random(100) >= 75
		kaboom(npc, dice)
	end
	
-------------------------------------------------------------------------> Vampirism
	if vampirism >= 1 then
		if killer.health < 1 then
			killer:change_health(0.0025 * vampirism)
		end
		if killer.power < 1 then
			killer:change_power(0.0025 * vampirism)
		end
	end
	
-------------------------------------------------------------------------> Warmonger
    if warmonger >= 1 then
        local weapon = killer:active_item()
		if not weapon or not IsWeapon(weapon) then return end
		
        local clip = ini_sys:r_float_ex(weapon:section(), "ammo_mag_size") or 0
		if clip < 3 then return end
		local ammo_list = utils_item.get_ammo(weapon:section(), weapon:id())
		local ammoCurrent = weapon:get_ammo_type()
		local ammoSec = ammo_list[ammoCurrent + 1]
	
        local regain = math.floor(clip * 0.34)
		printf("magicin some ammo")
		alife_create_item(ammoSec, killer, {ammo = regain})
	end
	
-------------------------------------------------------------------------> Headhunter
	criticalHit = criticalHit or z_cxv_experience_perk_on_hit.isCritical()
	
	if headhunter >= 1 and criticalHit and IsStalker(victim) then
		local player_comm = character_community(killer)
		local npc_rank = ranks.get_obj_rank_name(victim)
		local rank_bonus = killer.character_rank() + math.floor((10 * headhunter) * experience_core.EXPERIENCE_SETTINGS["stalker_xp_mult_by_rank"][npc_rank])
		killer:set_character_rank(rank_bonus)
		
		local rep_increase = math.floor( (1 + (0.25 * headhunter)) * experience_core.EXPERIENCE_SETTINGS["stalker_xp_mult_by_rank"][npc_rank] ) 
		game_statistics.increment_reputation(rep_increase)
	end
end

function on_game_start()
	RegisterScriptCallback("monster_on_death_callback",     perk_kill_effects)
    RegisterScriptCallback("npc_on_death_callback",         perk_kill_effects)
end